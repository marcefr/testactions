name: Build and Publish my test
on:
  push:
    branches:
    - test
    tags:
    - "*.*"
#env:
#  REF: ${{ github.ref }}
#  JOB: ${{ github.job }}
#  GITHUB_REPOSITORY: $GITHUB_REPOSITORY
#  VER: ${REF##*/}
jobs:
  marcelo:
    runs-on: ubuntu-latest
    steps:
    - name: variables
      run: |
        env|sort
    - uses: actions/checkout@v2.3.2
    - uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.GH_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/${{ github.job }}
        tag_with_ref: true
        push: ${{ startsWith(github.ref, 'refs/tags/') }}
    - name: docker-compose gen
      run: DCVER=${GITHUB_REF#refs/tags/} envsubst <docker-compose-test.yaml >docker-compose.yaml
    - name: Docker Deployment
      # You may pin to the exact commit or the version.
      # uses: wshihadeh/docker-deployment-action@166354ab4bd0a28ad27760df5f69b97ea4cc9399
      uses: wshihadeh/docker-deployment-action@v1
      with:
        # Remote Docker host ie (user@host)
        remote_docker_host: ubuntu@ehsmart-test.e-captum.com
        # Remote Docker SSH public key
        ssh_public_key: ${{ secrets.GHA_CI_SSHPUB }}
        # SSH private key used to connect to the docker host
        ssh_private_key: ${{ secrets.GHA_CI_SSHKEY }}
        # Deployment command args.
        args: "up -d"
        # Deployment mode either docker-swarm or docker-compose. Default is docker-compose.
        deployment_mode: docker-compose
        # Copy stack file to remote server and deploy from the server. Default is false.
        copy_stack_file: true
        # The path where the stack files will be copied to. Default ~/docker-deployment.
        #deploy_path: ~/${GITHUB_REPOSITORY}
        deploy_path: ~/marcelo
        # Docker stack file used. Default is docker-compose.yaml
        #stack_file_name: # optional
        # Number of the files to be kept on the server. Default is 3.
        #keep_files: # optional
        # A boolean input to trigger docker prune command.
        #docker_prune: # optional
        # The args for the pre deploument command.
        #pre_deployment_command_args: 
        # Pull docker images before deploying.
        pull_images_first: true
