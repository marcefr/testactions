name: Go build

on:
  push:
    tags:
    - v.*-stag
    - v.*-prod
    - v.*-test

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PKG: mydemo

    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
    - name: variables
      run: |
        TAG=${GITHUB_REF#refs/tags/v.}
        echo $TAG
        echo "REPO=${GITHUB_REPOSITORY,,}" >>$GITHUB_ENV
        echo "DTAG=${TAG%-*}" >>$GITHUB_ENV
        echo "DENV=${TAG#*-}" >>$GITHUB_ENV
        case "${TAG#*-}" in
        test*) echo "P2H=testv2.yocontribuyo.cl" >>$GITHUB_ENV
        	;;
        stag*) echo "P2H=100.26.3.52" >>$GITHUB_ENV
        	;;
        prod*) echo "P2H=yocontribuyo.cl" >>$GITHUB_ENV
        	;;
        esac
    - name: debug
      run: |
        echo ${{ env.REPO }}
        echo ${{ env.DTAG }}
        echo ${{ env.DENV }}
        echo ${{ env.P2H }}
    - uses: docker/build-push-action@v2.5.0
      with:
        #username: ${{ secrets.GHA_CI_USERNAME }}
        #password: ${{ secrets.GITHUB_TOKEN   }}
        #registry: docker.pkg.github.com
        #repository: ${{ env.REPO }}/${{ env.PKG }}-${{ env.DENV }}
        tags: ${{ env.DTAG }}
        #push: ${{ startsWith(github.ref, 'refs/tags/') }}
        #path: ${{ env.PKG }}

#- name: Build and push Docker images
#  # You may pin to the exact commit or the version.
#  # uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
#  uses: docker/build-push-action@v2.5.0
#  with:
#    # List of extra privileged entitlement (eg. network.host,security.insecure)
#    allow: # optional
#    # List of build-time variables
#    build-args: # optional
#    # Builder instance
#    builder: # optional
#    # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
#    cache-from: # optional
#    # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
#    cache-to: # optional
#    # Build's context is the set of files located in the specified PATH or URL
#    context: # optional
#    # Path to the Dockerfile
#    file: # optional
#    # List of metadata for an image
#    labels: # optional
#    # Load is a shorthand for --output=type=docker
#    load: # optional, default is false
#    # Set the networking mode for the RUN instructions during build
#    network: # optional
#    # Do not use cache when building the image
#    no-cache: # optional, default is false
#    # List of output destinations (format: type=local,dest=path)
#    outputs: # optional
#    # List of target platforms for build
#    platforms: # optional
#    # Always attempt to pull a newer version of the image
#    pull: # optional, default is false
#    # Push is a shorthand for --output=type=registry
#    push: # optional, default is false
#    # List of secrets to expose to the build (eg. key=string, GIT_AUTH_TOKEN=mytoken)
#    secrets: # optional
#    # List of secret files to expose to the build (eg. key=filename, MY_SECRET=./secret.txt)
#    secret-files: # optional
#    # List of SSH agent socket or keys to expose to the build
#    ssh: # optional
#    # List of tags
#    tags: # optional
#    # Sets the target stage to build
#    target: # optional
#    # GitHub Token used to authenticate against a repository for Git context
#    github-token: # optional, default is ${{ github.token }}

# vim: tabstop=2 shiftwidth=2 expandtab

